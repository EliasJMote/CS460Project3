Input file: ./Tests/allMR.ss
   1: (define (m) 10)
   2: (define (function var)
   3:     (cond ((list? ls) "is a list")
   4:     )
   5: )
   6: (define (function var)
   7:     (car ls)
   8: )
   9: (define (function var)
  10:     (cons (car ls) ls)
  11: )
  12: (define (function var)
  13:     (AND 1 1)
  14: )
  15: (define (functio1 var)
  16:     (* 2 2)
  17: )
  18: 
  19: (define (function2 var)
  20:     (* 1 1)
  21: )
  22: (define (abc) 'list?)
  23: 
  24: (define (a) b)
  25: ;;25
  26: (define (a) (cond (ident ident) (else ident )))
  27: ;;27
  28: (define (a) (cons '(a) '(b)))
  29: ;;29
  30: (define (a) (or))
  31: ;;31
  32: (define (a) (numberP ident))
  33: ;;33
  34: (define (a) (listP ident))
  35: ;;35
  36: (define (a) (nullP ident))
  37: ;;37
  38: (define (a) (+))
  39: ;;39
  40: (define (a) (/ ident))
  41: ;;41
  42: (define (a) (modulo ident ident))
  43: ;;43
  44: (define (a) (>))
  45: ;;45
  46: (define (a) (>=))
  47: ;;47
  48: (define (a) (a))
  49: ;;49
  50: (define (a) (newline))
  51: (define (a) '(and)'(zero?)'(else))
  52: (define (last list)
  53:   (cond ((null? (cdr list)) (car list))
  54: 	(else (last (cdr list)))
  55: 	)
  56:   )
  57: (define (d)
  58:   (- 2))
  59: (define (e)
  60:   (*) )
  61: (define (f)
  62:   (=) )
  63: (define (g)
  64:   (<) )
  65: (define (h)
  66:   (<=))
  67: (define (i)
  68:   (display 'a))
  69: (define (notZero n)
  70:   (not (= n 0))
  71:   )
  72: (define (symbolCheck)
  73:   (symbol? 'a))
  74: (define (function var)
  75:     (cond ((list? ls) "is a list")
  76:     )
  77: )
  78: (define (function var)
  79:     (car ls)
  80: )
  81: (define (function var)
  82:     (cons (car ls) ls)
  83: )
  84: (define (function var)
  85:     (AND 1 1)
  86: )
  87: (define (function var)
  88:     (OR 1 1)
  89: )
  90: (define (function var)
  91:     (NOT (= 1 1))
  92: )
  93: (define (function var)
  94:     (number? 1)
  95: )
  96: (define (function var)
  97:     (symbol? var)
  98: )
  99: (define (function var)
 100:     (list? ls)
 101: )
 102: (define (function var)
 103:     (zero? 0)
 104: )
 105: (define (function var)
 106:     (null? ls)
 107: )
 108: (define (function var)
 109:     (string? "asf")
 110: )
 111: (define (function var)
 112:     (+ 1 1)
 113: )
 114: (define (function var)
 115:     (- 1 1)
 116: )
 117: (define (function var)
 118:     (/ 4 2)
 119: )
 120: (define (function var)
 121:     (* 2 2)
 122: )
 123: (define (function var)
 124:     (modulo 4 2)
 125: )
 126: (define (function var)
 127:     (= 1 1)
 128: )
 129: (define (function var)
 130:     (> 2 1)
 131: )
 132: (define (function var)
 133:     (< 1 2)
 134: )
 135: (define (function var)
 136:     (>= 2 2)
 137: )
 138: (define (function var)
 139:     (<= 2 2)
 140: )
 141: (define (functio1 var)
 142:     (* 2 2)
 143: )
 144: 
 145: (define (function2 var)
 146:     (* 1 1)
 147: )
 148: (define (function)
 149:     'newline
 150: )
 151: (define (function)
 152:     'string?
 153: )
 154: (define (function)
 155:     ''a
 156: )
 157: ; Rule 24
 158: (define (rule_24_a) (if (> 3 4) 2 3))
 159: (define (rule_24_b) (if (< 3 4) 'true 'false))
 160: (define (rule_24_c) (if (null? '()) 'is_null 'not_null))
 161: (define (rule_24_d) (if (zero? '3) 'is_zero 'not_zero))
 162: ; Rule 26
 163: (define (rule_26_a) (car '(a)))
 164: (define (rule_26_b) (cdr '(a)))
 165: (define (rule_26_c) (car '((a)b)))
 166: (define (rule_26_d) (cdr '((a)b)))
 167: (define (rule_26_e) (cadr '((a)b)))
 168: (define (rule_26_f) (cddr '((a)b)))
 169: ; Rule 28
 170: (define (rule_28_a) (and))
 171: ; Rule 30
 172: (define (rule_30_a) (not (< 4 3)))
 173: (define (rule_30_b) (not (and (= 3 3) (< 2 3))))
 174: ; Rule 32
 175: (define (rule_32_a) (symbol? 'a))
 176: ; Rule 34
 177: (define (rule_34_a) (zero? 0))
 178: ; Rule 36
 179: (define (rule_36_a) (string? "hello, world"))
 180: ; Rule 38
 181: (define (rule_38_a) (- 4 2))
 182: ; Rule 40
 183: (define (rule_40_a) (* 1 2))
 184: (define (rule_40_b) (*))
 185: ; Rule 42
 186: (define (rule_42_a) (= 2 2))
 187: (define (rule_42_b) (=))
 188: ; Rule 44
 189: (define (rule_44_a) (< 3 4))
 190: (define (rule_44_b) (<))
 191: ; Rule 46
 192: (define (rule_46_a) (<= 3 3))
 193: (define (rule_46_b) (<=))
 194: ; Rule 48
 195: (define (rule_48_a) (display "0118999\n"))
 196: (define (rule_48_b) (display 0118999))
 197: (define (rules_54_71_76_a arg1 arg2) 
 198: 	(if (number? arg1)
 199: 		(if (and (> arg1 0) (list? '(< arg1 10)))
 200: 			'(cons (/ arg1 2) arg2)
 201: 			'()
 202: 		)
 203: 		"Argument 1 should be a number\n"	
 204: 	)
 205: )
 206: 
 207: ;(display (rules_54-71-76_a 4 '(a b c)))
0 errors found in input file
