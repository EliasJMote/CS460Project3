// Autogenerated Scheme to C++ Code
// File: ./Tests/allMR.cpp
#include <iostream>
#include "Object.h"
using namespace std;

Object m( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	ls 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	ls 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	ls 	ls 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = AND()	
	return __RetVal;
}

Object functio1( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function2( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object abc( )
{
	Object __RetVal;
	__RetVal = 	 list? 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	b 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	ident 	ident 	ident 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	 a 	 b 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = numberP(	ident )	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = listP(	ident )	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = nullP(	ident )	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	ident 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	ident 	ident 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = a()	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	 and 	 zero? 	 else 	
	return __RetVal;
}

Object last( list )
{
	Object __RetVal;
	__RetVal = 	list 	list last(	list )	
	return __RetVal;
}

Object d( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object e( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object f( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object g( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object h( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	cout << 	 a ;
	
	return __RetVal;
}

Object notZero( n )
{
	Object __RetVal;
	__RetVal = 	n 	
	return __RetVal;
}

Object symbolCheck( )
{
	Object __RetVal;
	__RetVal = 	 a 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	ls 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	ls 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	ls 	ls 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = AND()	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = OR()	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = NOT()	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	var 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	ls 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	ls 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object functio1( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function2( var )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object function( )
{
	Object __RetVal;
	__RetVal = 	 newline 	
	return __RetVal;
}

Object function( )
{
	Object __RetVal;
	__RetVal = 	 string? 	
	return __RetVal;
}

Object function( )
{
	Object __RetVal;
	__RetVal = 	 ' 	 a 	
	return __RetVal;
}

Object rule_24_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_24_b( )
{
	Object __RetVal;
	__RetVal = 	 true 	 false 	
	return __RetVal;
}

Object rule_24_c( )
{
	Object __RetVal;
	__RetVal = 	 is_null 	 not_null 	
	return __RetVal;
}

Object rule_24_d( )
{
	Object __RetVal;
	__RetVal = 	 3 	 is_zero 	 not_zero 	
	return __RetVal;
}

Object rule_26_a( )
{
	Object __RetVal;
	__RetVal = 	 a 	
	return __RetVal;
}

Object rule_26_b( )
{
	Object __RetVal;
	__RetVal = 	 a 	
	return __RetVal;
}

Object rule_26_c( )
{
	Object __RetVal;
	__RetVal = 	 a 	 b 	
	return __RetVal;
}

Object rule_26_d( )
{
	Object __RetVal;
	__RetVal = 	 a 	 b 	
	return __RetVal;
}

Object rule_26_e( )
{
	Object __RetVal;
	__RetVal = 	 a 	 b 	
	return __RetVal;
}

Object rule_26_f( )
{
	Object __RetVal;
	__RetVal = 	 a 	 b 	
	return __RetVal;
}

Object rule_28_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_30_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_30_b( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_32_a( )
{
	Object __RetVal;
	__RetVal = 	 a 	
	return __RetVal;
}

Object rule_34_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_36_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_38_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_40_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_40_b( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_42_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_42_b( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_44_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_44_b( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_46_a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_46_b( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule_48_a( )
{
	Object __RetVal;
	__RetVal = 	cout << ;
	
	return __RetVal;
}

Object rule_48_b( )
{
	Object __RetVal;
	__RetVal = 	cout << ;
	
	return __RetVal;
}

Object rules_54_71_76_a( arg1 arg2 )
{
	Object __RetVal;
	__RetVal = 	arg1 	arg1 	 < 	 arg1 	 10 	 cons 	 / 	 arg1 	 2 	 arg2 	
	return __RetVal;
}

