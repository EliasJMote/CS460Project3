Input file: ./Tests/allSX.ss
   1: ;; File: S19.ss
   2: ;; Authors: Devin Brown and Ryan Moeller
   3: 
   4: ;; Rule 19
   5: ;; Rule 73
   6: ;; Rule 74
   7: (define (f) (if 'modulo '=))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         f
	RPAREN_T        )
	LPAREN_T        (
	IF_T            if
	QUOTE_T         '
	MODULO_T        modulo
	QUOTE_T         '
	EQUALTO_T       =
	RPAREN_T        )
	RPAREN_T        )
   8: ;; File: S1.ss
   9: ;; Authors: Devin Brown and Ryan Moeller
  10: 
  11: ;; Smallest possible program that compiles
  12: (define (x) x)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	IDENT_T         x
	RPAREN_T        )
  13: ;; File: S25.ss
  14: ;; Authors: Devin Brown and Ryan Moeller
  15: 
  16: ;; Rule 25
  17: (define (x) (cond (x x)))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	COND_T          cond
	LPAREN_T        (
	IDENT_T         x
	IDENT_T         x
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
  18: ;; File: S27.ss
  19: ;; Authors: Devin Brown and Ryan Moeller
  20: 
  21: ;; Rule 27
  22: (define (x) (cons 0 x))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	CONS_T          cons
	NUMLIT_T        0
	IDENT_T         x
	RPAREN_T        )
	RPAREN_T        )
  23: ;; File: S29.ss
  24: ;; Authors: Devin Brown and Ryan Moeller
  25: 
  26: ;; Rule 29
  27: (define (x) (or))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	OR_T            or
	RPAREN_T        )
	RPAREN_T        )
  28: ;; File: S31.ss
  29: ;; Authors: Devin Brown and Ryan Moeller
  30: 
  31: ;; Rule 31
  32: (define (x) (number? x))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	NUMBERP_T       number?
	IDENT_T         x
	RPAREN_T        )
	RPAREN_T        )
  33: ;; File: S33.ss
  34: ;; Authors: Devin Brown and Ryan Moeller
  35: 
  36: ;; Rule 33
  37: (define (x) (list? x))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	LISTP_T         list?
	IDENT_T         x
	RPAREN_T        )
	RPAREN_T        )
  38: ;; File: S35.ss
  39: ;; Authors: Devin Brown and Ryan Moeller
  40: 
  41: ;; Rule 35
  42: (define (x) (null? x))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	NULLP_T         null?
	IDENT_T         x
	RPAREN_T        )
	RPAREN_T        )
  43: ;; File: S37.ss
  44: ;; Authors: Devin Brown and Ryan Moeller
  45: 
  46: ;; Rule 37
  47: (define (x) (+))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	PLUS_T          +
	RPAREN_T        )
	RPAREN_T        )
  48: ;; File: S39.ss
  49: ;; Authors: Devin Brown and Ryan Moeller
  50: 
  51: ;; Rule 39
  52: (define (x) (/ x))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	DIV_T           /
	IDENT_T         x
	RPAREN_T        )
	RPAREN_T        )
  53: ;; File: S41.ss
  54: ;; Authors: Devin Brown and Ryan Moeller
  55: 
  56: ;; Rule 41
  57: (define (x) (modulo x x))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	MODULO_T        modulo
	IDENT_T         x
	IDENT_T         x
	RPAREN_T        )
	RPAREN_T        )
  58: ;; File: S43.ss
  59: ;; Authors: Devin Brown and Ryan Moeller
  60: 
  61: ;; Rule 43
  62: (define (x) (>))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	GT_T            >
	RPAREN_T        )
	RPAREN_T        )
  63: ;; File: S45.ss
  64: ;; Authors: Devin Brown and Ryan Moeller
  65: 
  66: ;; Rule 45
  67: (define (x) (>=))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	GTE_T           >=
	RPAREN_T        )
	RPAREN_T        )
  68: ;; File: S47.ss
  69: ;; Authors: Devin Brown and Ryan Moeller
  70: 
  71: ;; Rule 47
  72: (define (x) (x))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	RPAREN_T        )
  73: ;; File: S49.ss
  74: ;; Authors: Devin Brown and Ryan Moeller
  75: 
  76: ;; Rule 49
  77: (define (x) (newline))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         x
	RPAREN_T        )
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
	RPAREN_T        )
  78: ;; File: S19.ss
  79: ;; Authors: Devin Brown and Ryan Moeller
  80: 
  81: ;; Rule 19
  82: ;; Rule 73
  83: ;; Rule 74
  84: (define (f) (if 'modulo '=))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         f
	RPAREN_T        )
	LPAREN_T        (
	IF_T            if
	QUOTE_T         '
	MODULO_T        modulo
	QUOTE_T         '
	EQUALTO_T       =
	RPAREN_T        )
	RPAREN_T        )
  85: (define (isList a) (if (list? a) a 'param_passed_is_not_list)) ;rule 24 ; rule 33(define (carList a) (car a)) ;rule 26(define (PositiveNumber a) (and (number? a) (<= 0 a))) ;rule 28 (define (NotList a) (not (list? a))) ; rule 30;follow actual  structure, all start with define 
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         isList
	IDENT_T         a
	RPAREN_T        )
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	LISTP_T         list?
	IDENT_T         a
	RPAREN_T        )
	IDENT_T         a
	QUOTE_T         '
	IDENT_T         param_passed_is_not_list
	RPAREN_T        )
	RPAREN_T        )
  86: (define (isSymbol a) (symbol? a)) ; rule 32(define (isZero a) (zero? a)) ;rule 34(define(isString a) (string? a)) ;rule 36(define(Sub a b) (- a b)) ;rule 38(define(Mult a b) (* a b)) ;rule 40(define(EqaulTo a b) (= a b)) ; rule 42(define(LessThan a b) ( < a b));rule 44(define(LessThanEqual a b) ( <= a b )) ;rule 46(define(DisplayZ a) (display a));rule 48(define (HelloWorld) 'HelloWorld) ; rule53(define (square) '*) ;rule72(define (greater) '>);; File: U25.ss
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         isSymbol
	IDENT_T         a
	RPAREN_T        )
	LPAREN_T        (
	SYMBOLP_T       symbol?
	IDENT_T         a
	RPAREN_T        )
	RPAREN_T        )
  87: ;; Group U
  88: 
  89: (define (a)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
  90:   (cond (a b)
	LPAREN_T        (
	COND_T          cond
	LPAREN_T        (
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
  91: 	(else c)
	LPAREN_T        (
	ELSE_T          else
	IDENT_T         c
	RPAREN_T        )
  92: 	)
	RPAREN_T        )
  93:   )
	RPAREN_T        )
  94: ;; File: U27.ss
  95: ;; Group U
  96: 
  97: (define (a)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
  98:   (cons a b)
	LPAREN_T        (
	CONS_T          cons
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
  99:   )
	RPAREN_T        )
 100: ;; File: U29.ss
 101: ;; Group U
 102: 
 103: (define (a)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
 104:   (or b)
	LPAREN_T        (
	OR_T            or
	IDENT_T         b
	RPAREN_T        )
 105:   )
	RPAREN_T        )
 106: ;; File: U31.ss
 107: ;; Group U
 108: 
 109: (define (a)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
 110:   (number? a)
	LPAREN_T        (
	NUMBERP_T       number?
	IDENT_T         a
	RPAREN_T        )
 111:   )
	RPAREN_T        )
 112: ;; File: U33.ss
 113: ;; Group U
 114: 
 115: (define (a)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
 116:   (list? 9)
	LPAREN_T        (
	LISTP_T         list?
	NUMLIT_T        9
	RPAREN_T        )
 117:   )
	RPAREN_T        )
 118: ;; File U35.ss
 119: ;; Group U
 120: 
 121: (define (a)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
 122:   (null? 9)
	LPAREN_T        (
	NULLP_T         null?
	NUMLIT_T        9
	RPAREN_T        )
 123:   )
	RPAREN_T        )
 124: (define (add a b) (+))(define (divide a b) (/ a b))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         add
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
	LPAREN_T        (
	PLUS_T          +
	RPAREN_T        )
	RPAREN_T        )
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         divide
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
	LPAREN_T        (
	DIV_T           /
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
	RPAREN_T        )
 125: (define (mod a b)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         mod
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
 126:   (modulo a b)
	LPAREN_T        (
	MODULO_T        modulo
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
 127:   )
	RPAREN_T        )
 128: (define (greater_than a b) (>))(define (greater_equal a b) (>=))(define (ident) (IDENT_T))(define (nwln) (NEWLINE_T))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         greater_than
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
	LPAREN_T        (
	GT_T            >
	RPAREN_T        )
	RPAREN_T        )
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         greater_equal
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
	LPAREN_T        (
	GTE_T           >=
	RPAREN_T        )
	RPAREN_T        )
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         ident
	RPAREN_T        )
	LPAREN_T        (
	IDENT_T         IDENT_T
	RPAREN_T        )
	RPAREN_T        )
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         nwln
	RPAREN_T        )
	LPAREN_T        (
	IDENT_T         NEWLINE_T
	RPAREN_T        )
	RPAREN_T        )
 129: (define (if_token) 'if)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         if_token
	RPAREN_T        )
	QUOTE_T         '
	IF_T            if
	RPAREN_T        )
 130: (define (minus a) '-)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         minus
	IDENT_T         a
	RPAREN_T        )
	QUOTE_T         '
	MINUS_T         -
	RPAREN_T        )
 131: (define (gte_token) '>=)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         gte_token
	RPAREN_T        )
	QUOTE_T         '
	GTE_T           >=
	RPAREN_T        )
 132: (define (i) i)(define (j) j)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	IDENT_T         i
	RPAREN_T        )
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         j
	RPAREN_T        )
	IDENT_T         j
	RPAREN_T        )
 133: (define (i) (if i i (i)))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	LPAREN_T        (
	IF_T            if
	IDENT_T         i
	IDENT_T         i
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
 134: (define (i) (cond (i i)))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	LPAREN_T        (
	COND_T          cond
	LPAREN_T        (
	IDENT_T         i
	IDENT_T         i
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
 135: (define (i) (car (car (i))))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	LPAREN_T        (
	LISTOP_T        car
	LPAREN_T        (
	LISTOP_T        car
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
 136: (define (i) (cons (cons i i) i))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	LPAREN_T        (
	CONS_T          cons
	LPAREN_T        (
	CONS_T          cons
	IDENT_T         i
	IDENT_T         i
	RPAREN_T        )
	IDENT_T         i
	RPAREN_T        )
	RPAREN_T        )
 137: (define (i) (or i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	LPAREN_T        (
	OR_T            or
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	IDENT_T         i
	RPAREN_T        )
	RPAREN_T        )
 138: (define (i j) i j)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	IDENT_T         j
	RPAREN_T        )
	IDENT_T         i
	IDENT_T         j
	RPAREN_T        )
 139: (define (i) (not i))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	LPAREN_T        (
	NOT_T           not
	IDENT_T         i
	RPAREN_T        )
	RPAREN_T        )
 140: (define (mod i j) (modulo i i))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         mod
	IDENT_T         i
	IDENT_T         j
	RPAREN_T        )
	LPAREN_T        (
	MODULO_T        modulo
	IDENT_T         i
	IDENT_T         i
	RPAREN_T        )
	RPAREN_T        )
 141: (define (i) 'display) (define (i) '+) (define (i) '<=)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	QUOTE_T         '
	DISPLAY_T       display
	RPAREN_T        )
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	QUOTE_T         '
	PLUS_T          +
	RPAREN_T        )
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         i
	RPAREN_T        )
	QUOTE_T         '
	LTE_T           <=
	RPAREN_T        )
 142: (define (rule25) (cond ((=) 'yeah ))) 	; Rule 25
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule25
	RPAREN_T        )
	LPAREN_T        (
	COND_T          cond
	LPAREN_T        (
	LPAREN_T        (
	EQUALTO_T       =
	RPAREN_T        )
	QUOTE_T         '
	IDENT_T         yeah
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
 143: (define (rule27) (const '(a) '(b))) 	; Rule 27
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule27
	RPAREN_T        )
	LPAREN_T        (
	IDENT_T         const
	QUOTE_T         '
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
	QUOTE_T         '
	LPAREN_T        (
	IDENT_T         b
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
 144: (define (rule29) (or)) 		; Rule 29
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule29
	RPAREN_T        )
	LPAREN_T        (
	OR_T            or
	RPAREN_T        )
	RPAREN_T        )
 145: (define (rule31) (number? 0)) 		; Rule 31
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule31
	RPAREN_T        )
	LPAREN_T        (
	NUMBERP_T       number?
	NUMLIT_T        0
	RPAREN_T        )
	RPAREN_T        )
 146: (define (rule33) (list? 0)) 		; Rule 33
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule33
	RPAREN_T        )
	LPAREN_T        (
	LISTP_T         list?
	NUMLIT_T        0
	RPAREN_T        )
	RPAREN_T        )
 147: (define (rule35) (null? 0)) 		; Rule 35
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule35
	RPAREN_T        )
	LPAREN_T        (
	NULLP_T         null?
	NUMLIT_T        0
	RPAREN_T        )
	RPAREN_T        )
 148: (define (rule37) (+)) 			; Rule 37
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule37
	RPAREN_T        )
	LPAREN_T        (
	PLUS_T          +
	RPAREN_T        )
	RPAREN_T        )
 149: (define (rule39) (/ 1)) 		; Rule 39
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule39
	RPAREN_T        )
	LPAREN_T        (
	DIV_T           /
	NUMLIT_T        1
	RPAREN_T        )
	RPAREN_T        )
 150: (define (rule41) (modulo 5 2)) 	; Rule 41
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule41
	RPAREN_T        )
	LPAREN_T        (
	MODULO_T        modulo
	NUMLIT_T        5
	NUMLIT_T        2
	RPAREN_T        )
	RPAREN_T        )
 151: (define (rule43) (>)) 			; Rule 43
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule43
	RPAREN_T        )
	LPAREN_T        (
	GT_T            >
	RPAREN_T        )
	RPAREN_T        )
 152: (define (rule45) (>=)) 		; Rule 45
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule45
	RPAREN_T        )
	LPAREN_T        (
	GTE_T           >=
	RPAREN_T        )
	RPAREN_T        )
 153: (define (rule47) (this)) 		; Rule 47
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule47
	RPAREN_T        )
	LPAREN_T        (
	IDENT_T         this
	RPAREN_T        )
	RPAREN_T        )
 154: (define (rule49) (newline)) 		; Rule 49
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rule49
	RPAREN_T        )
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
	RPAREN_T        )
 155: (define (rules80) (cons 'car (cons 'null? 'cond )))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         rules80
	RPAREN_T        )
	LPAREN_T        (
	CONS_T          cons
	QUOTE_T         '
	LISTOP_T        car
	LPAREN_T        (
	CONS_T          cons
	QUOTE_T         '
	NULLP_T         null?
	QUOTE_T         '
	COND_T          cond
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
 156: 
 157: (define (a) 10)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
	NUMLIT_T        10
	RPAREN_T        )
 158: (define (a) "a")
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
	STRLIT_T        "a"
	RPAREN_T        )
 159: (define (a) '2)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
	QUOTE_T         '
	NUMLIT_T        2
	RPAREN_T        )
 160: (define (a) '2)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
	QUOTE_T         '
	NUMLIT_T        2
	RPAREN_T        )
 161: (define (a) '())
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
	QUOTE_T         '
	LPAREN_T        (
	RPAREN_T        )
	RPAREN_T        )
 162: (define (a) '())
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
	QUOTE_T         '
	LPAREN_T        (
	RPAREN_T        )
	RPAREN_T        )
 163: (define (a b) 10)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	IDENT_T         b
	RPAREN_T        )
	NUMLIT_T        10
	RPAREN_T        )
 164: (define (a) 10)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
	NUMLIT_T        10
	RPAREN_T        )
 165: (define (a) (if 'define 'number?))
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         a
	RPAREN_T        )
	LPAREN_T        (
	IF_T            if
	QUOTE_T         '
	DEFINE_T        define
	QUOTE_T         '
	NUMBERP_T       number?
	RPAREN_T        )
	RPAREN_T        )
	EOF_T           
0 errors found in input file
