// Autogenerated Scheme to C++ Code
// File: ./Tests/allSX.cpp
#include <iostream>
#include "Object.h"
using namespace std;

Object f( )
{
	Object __RetVal;
	__RetVal = 	 modulo 	 = 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	x 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	x 	x 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	x 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	x 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	x 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	x 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	x 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	x 	x 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = x()	
	return __RetVal;
}

Object x( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object f( )
{
	Object __RetVal;
	__RetVal = 	 modulo 	 = 	
	return __RetVal;
}

Object isList( a )
{
	Object __RetVal;
	__RetVal = 	a 	a 	 param_passed_is_not_list 	
	return __RetVal;
}

Object isSymbol( a )
{
	Object __RetVal;
	__RetVal = 	a 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	a 	b 	c 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	a 	b 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	b 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	a 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object add( a b )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object divide( a b )
{
	Object __RetVal;
	__RetVal = 	a 	b 	
	return __RetVal;
}

Object mod( a b )
{
	Object __RetVal;
	__RetVal = 	a 	b 	
	return __RetVal;
}

Object greater_than( a b )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object greater_equal( a b )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object ident( )
{
	Object __RetVal;
	__RetVal = IDENT_T()	
	return __RetVal;
}

Object nwln( )
{
	Object __RetVal;
	__RetVal = NEWLINE_T()	
	return __RetVal;
}

Object if_token( )
{
	Object __RetVal;
	__RetVal = 	 if 	
	return __RetVal;
}

Object minus( a )
{
	Object __RetVal;
	__RetVal = 	 - 	
	return __RetVal;
}

Object gte_token( )
{
	Object __RetVal;
	__RetVal = 	 >= 	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	i 	
	return __RetVal;
}

Object j( )
{
	Object __RetVal;
	__RetVal = 	j 	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	i 	i i()	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	i 	i 	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = i()	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	i 	i 	i 	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	i 	
	return __RetVal;
}

Object i( j )
{
	Object __RetVal;
	__RetVal = 	i 	j 	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	i 	
	return __RetVal;
}

Object mod( i j )
{
	Object __RetVal;
	__RetVal = 	i 	i 	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	 display 	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	 + 	
	return __RetVal;
}

Object i( )
{
	Object __RetVal;
	__RetVal = 	 <= 	
	return __RetVal;
}

Object rule25( )
{
	Object __RetVal;
	__RetVal = 	 yeah 	
	return __RetVal;
}

Object rule27( )
{
	Object __RetVal;
	__RetVal = const(	 a 	 b )	
	return __RetVal;
}

Object rule29( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule31( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule33( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule35( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule37( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule39( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule41( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule43( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule45( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rule47( )
{
	Object __RetVal;
	__RetVal = this()	
	return __RetVal;
}

Object rule49( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object rules80( )
{
	Object __RetVal;
	__RetVal = 	 car 	 null? 	 cond 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	 2 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	 2 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( b )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	
	return __RetVal;
}

Object a( )
{
	Object __RetVal;
	__RetVal = 	 define 	 number? 	
	return __RetVal;
}

